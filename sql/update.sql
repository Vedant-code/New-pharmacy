 /* UPDATE ON HAS_STOCK_SUPPLY TOTAL_COST WHERE TOTAL_COST = UNIT_COST_PRICE * QUANTITY*/
 
 UPDATE HAS_STOCK_SUPPLY SET total_cost= (quantity*unit_cost_price) ;


  /* UPDATE ON STOCK TOTAL_COST WHERE TOTAL_COST = SUM(TOTAL_AMT) *( 100*OVERHEAD_PCT/100)*/

UPDATE STOCK
SET total_cost = (SELECT SUM(HAS_STOCK_SUPPLY.total_cost) 
FROM HAS_STOCK_SUPPLY WHERE 
HAS_STOCK_SUPPLY.stock_id =  STOCK.stock_id and
HAS_STOCK_SUPPLY.supplier_id =  STOCK.supplier_id 
GROUP BY HAS_STOCK_SUPPLY.stock_id ) ;

update STOCK
SET total_cost = total_cost * (1 + overhead_pct*0.01);

/* UPDATE ON HAS_STORE_STOCK UNIT_SELLING PRICE = HAS_STOCK_SUPPLY.UNIT_COST_PRICE * 1.15 */

UPDATE HAS_STORE_STOCK
SET UNIT_SELLING_PRICE = ((SELECT UNIT_COST_PRICE 
          FROM HAS_STOCK_SUPPLY WHERE HAS_STOCK_SUPPLY.stock_id =  HAS_STORE_STOCK.stock_id
 and HAS_STOCK_SUPPLY.medicine_id = HAS_STORE_STOCK.medicine_id) * 1.15);

/* UPDATE ON ORDER_ITEMS TOTAL_AMT WHERE TOTAL_AMT= UNIT_SELLING PRICE_PRICE * QUANTITY*/

UPDATE ORDER_ITEMS SET total_amt= quantity * unit_selling_price;

/* UPDATE ON ORDERS TOTAL_AMT WHERE TOTAL_AMT= (SUM(total_amt)) * 1.07 where we add */

UPDATE ORDERS 
SET total_amt= (SELECT SUM(total_amt) 
FROM ORDER_ITEMS WHERE ORDER_ITEMS.order_id = ORDERS.order_id) * 1.07;

